from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.ensemble import RandomForestClassifier
import joblib

# Misal data kategorikal dan numerik
categorical_features = ['type_of_meal_plan', 'room_type_reserved', 'market_segment_type']
numerical_features = ['no_of_adults', 'no_of_children', 'no_of_weekend_nights', 'no_of_week_nights',
                      'required_car_parking_space', 'lead_time', 'arrival_year', 'arrival_month',
                      'arrival_date', 'repeated_guest', 'no_of_previous_cancellations', 
                      'no_of_previous_bookings_not_canceled', 'avg_price_per_room', 'no_of_special_requests']

# Preprocessing pipeline
preprocessor = ColumnTransformer(
    transformers=[
        ('num', StandardScaler(), numerical_features),
        ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_features)
    ])

# Full pipeline with model
pipeline = Pipeline(steps=[
    ('preprocessor', preprocessor),
    ('model', RandomForestClassifier())
])

# Fit the model
pipeline.fit(X_train, y_train)

# Save the pipeline
joblib.dump(pipeline, 'model_pipeline.pkl')
